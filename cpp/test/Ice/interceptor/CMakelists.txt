if(NOT ${CMAKE_CURRENT_BINARY_DIR}/Ice)
	file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/Ice)
endif()

set(GENERATED_INTERCEPTOR_HEADERS ${CMAKE_CURRENT_BINARY_DIR}/Ice/Test.h)
set(GENERATED_INTERCEPTOR_SOURCES ${CMAKE_CURRENT_BINARY_DIR}/Ice/Test.cpp)

list(APPEND ICE_SLICE_DIRS "-I${SLICE_DIR}")
list(APPEND ICE_SLICE_PARAMS ${COMPILE_SLICES_CPP_PARAMETERS} "Ice")

set(output_files 
	${CMAKE_CURRENT_BINARY_DIR}/Ice/Test.cpp 
	${CMAKE_CURRENT_BINARY_DIR}/Ice/Test.h
)	
#function(CompileSlice slice2bin_params slice_include_paths ice_file output_dir output_file)
CompileSlice("${ICE_SLICE_PARAMS}"
	"${ICE_SLICE_DIRS}"
	${CMAKE_CURRENT_SOURCE_DIR}/Test.ice
	${CMAKE_CURRENT_BINARY_DIR}/Ice
	"${output_files}"
)

if(BUILD_ICE_CPP98)
	set(INTERCEPTOR_DEPS 
		ice
		testcommon
	)
elseif(BUILD_ICE_CPP11)
	set(INTERCEPTOR_DEPS 
		ice++11
		testcommon++11
	)
elseif(BUILD_ICE_UWP)
	set(INTERCEPTOR_DEPS 
		iceuwp++11
		testcommonuwp++11
	)
endif()

if(BUILD_ICE_UWP)
	add_library(iceinterceptortest STATIC)
else()
	add_library(iceinterceptortest)
endif()

target_sources(iceinterceptortest
	PRIVATE
		TestI.cpp
		${GENERATED_INTERCEPTOR_HEADERS}
		${GENERATED_INTERCEPTOR_SOURCES}
)

target_include_directories(iceinterceptortest
	PRIVATE
		${PROJECT_SOURCE_DIR}/cpp/include
		${PROJECT_SOURCE_DIR}/cpp/test/include
		${CMAKE_CURRENT_SOURCE_DIR}
		${CMAKE_CURRENT_BINARY_DIR}/Ice
		${CMAKE_CURRENT_BINARY_DIR}
		${GENERATED_SLICES_DIR}
)

if(BUILD_ICE_CPP98)
	set_property(TARGET iceinterceptortest PROPERTY CXX_STANDARD 98)
elseif(BUILD_ICE_CPP11)
	set_property(TARGET iceinterceptortest PROPERTY CXX_STANDARD 11)
endif()

if(BUILD_ICE_UWP)
	add_dependencies(iceinterceptortest ${INTERCEPTOR_DEPS})
	set_property(TARGET iceinterceptortest PROPERTY CXX_STANDARD 11)
else()
	target_link_libraries(iceinterceptortest PRIVATE ${INTERCEPTOR_DEPS})
endif()

target_compile_definitions(iceinterceptortest PRIVATE ${ICE_COMPILE_DEFS})

if(MSVC)
	source_group("Slice Files"
		FILES
			Test.ice
	)

	source_group("Source Files/Generated"
		FILES
			${GENERATED_INTERCEPTOR_SOURCES}
	)

	source_group("Header Files/Generated"
		FILES
			${GENERATED_INTERCEPTOR_HEADERS}
	)

	target_compile_options(iceinterceptortest
		PRIVATE
			${ICE_MSVC_COMPILE_OPTIONS}
	)

	if(NOT BUILD_ICE_UWP)
		set_property(TARGET iceinterceptortest PROPERTY LINK_FLAGS ${ICE_MSVC_DLL_LINK_OPTIONS})
	else()
		set_property(TARGET iceinterceptortest PROPERTY LINK_FLAGS ${ICE_UWP_LINK_OPTIONS})
	endif()
endif()

if(BUILD_SHARED_LIBS)
	install(TARGETS iceinterceptortest DESTINATION tests/bin)
else()
	install(TARGETS iceinterceptortest DESTINATION tests/lib)
endif()

add_executable(iceinterceptorclient)

target_sources(iceinterceptorclient
	PRIVATE
		AMDInterceptorI.cpp
		Client.cpp
		InterceptorI.cpp
		MyObjectI.cpp
)

if(BUILD_ICE_UWP)
	target_sources(iceinterceptorclient PRIVATE TestI.cpp)
endif()

target_include_directories(iceinterceptorclient
	PRIVATE
		${PROJECT_SOURCE_DIR}/cpp/include
		${PROJECT_SOURCE_DIR}/cpp/test/include
		${CMAKE_CURRENT_SOURCE_DIR}
		${CMAKE_CURRENT_BINARY_DIR}/Ice
		${CMAKE_CURRENT_BINARY_DIR}
		${GENERATED_SLICES_DIR}
)

if(BUILD_ICE_CPP98)
	set_property(TARGET iceinterceptorclient PROPERTY CXX_STANDARD 98)
elseif(BUILD_ICE_CPP11)
	set_property(TARGET iceinterceptorclient PROPERTY CXX_STANDARD 11)
endif()

if(BUILD_ICE_UWP)
	add_dependencies(iceinterceptorclient ${INTERCEPTOR_DEPS} iceinterceptortest)
	set_property(TARGET iceinterceptorclient PROPERTY CXX_STANDARD 11)
else()
	target_link_libraries(iceinterceptorclient PRIVATE ${INTERCEPTOR_DEPS} iceinterceptortest)
endif()

target_compile_definitions(iceinterceptorclient PRIVATE ${ICE_COMPILE_DEFS})

if(MSVC)
	if(NOT BUILD_ICE_UWP)
		set_property(TARGET iceinterceptorclient PROPERTY LINK_FLAGS ${ICE_MSVC_DLL_LINK_OPTIONS})
	else()
		set_property(TARGET iceinterceptorclient PROPERTY LINK_FLAGS ${ICE_UWP_LINK_OPTIONS})
	endif()
endif()

install(TARGETS iceinterceptorclient DESTINATION tests/bin)
