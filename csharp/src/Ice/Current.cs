//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `Current.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

using _System = global::System;

#pragma warning disable 1591

namespace Ice
{
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class Current : global::System.ICloneable
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public ObjectAdapter adapter;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public Connection con;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public Identity id;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string facet;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string operation;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public OperationMode mode;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public global::System.Collections.Generic.Dictionary<string, string> ctx;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public int requestId;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public EncodingVersion encoding;

        #endregion

        partial void ice_initialize();

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public Current()
        {
            this.id = new Identity();
            this.facet = "";
            this.operation = "";
            this.encoding = new EncodingVersion();
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public Current(ObjectAdapter adapter, Connection con, Identity id, string facet, string operation, OperationMode mode, global::System.Collections.Generic.Dictionary<string, string> ctx, int requestId, EncodingVersion encoding)
        {
            this.adapter = adapter;
            this.con = con;
            this.id = id;
            this.facet = facet;
            this.operation = operation;
            this.mode = mode;
            this.ctx = ctx;
            this.requestId = requestId;
            this.encoding = encoding;
            ice_initialize();
        }

        #endregion

        #region ICloneable members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override int GetHashCode()
        {
            int h_ = 5381;
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Ice::Current");
            global::IceInternal.HashUtil.hashAdd(ref h_, adapter);
            global::IceInternal.HashUtil.hashAdd(ref h_, con);
            global::IceInternal.HashUtil.hashAdd(ref h_, id);
            global::IceInternal.HashUtil.hashAdd(ref h_, facet);
            global::IceInternal.HashUtil.hashAdd(ref h_, operation);
            global::IceInternal.HashUtil.hashAdd(ref h_, mode);
            global::IceInternal.HashUtil.hashAdd(ref h_, ctx);
            global::IceInternal.HashUtil.hashAdd(ref h_, requestId);
            global::IceInternal.HashUtil.hashAdd(ref h_, encoding);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool Equals(object other)
        {
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            if(other == null)
            {
                return false;
            }
            if(GetType() != other.GetType())
            {
                return false;
            }
            Current o = (Current)other;
            if(this.adapter == null)
            {
                if(o.adapter != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.adapter.Equals(o.adapter))
                {
                    return false;
                }
            }
            if(this.con == null)
            {
                if(o.con != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.con.Equals(o.con))
                {
                    return false;
                }
            }
            if(this.id == null)
            {
                if(o.id != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.id.Equals(o.id))
                {
                    return false;
                }
            }
            if(this.facet == null)
            {
                if(o.facet != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.facet.Equals(o.facet))
                {
                    return false;
                }
            }
            if(this.operation == null)
            {
                if(o.operation != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.operation.Equals(o.operation))
                {
                    return false;
                }
            }
            if(!this.mode.Equals(o.mode))
            {
                return false;
            }
            if(this.ctx == null)
            {
                if(o.ctx != null)
                {
                    return false;
                }
            }
            else
            {
                if(!global::IceUtilInternal.Collections.DictionaryEquals(this.ctx, o.ctx))
                {
                    return false;
                }
            }
            if(!this.requestId.Equals(o.requestId))
            {
                return false;
            }
            if(!this.encoding.Equals(o.encoding))
            {
                return false;
            }
            return true;
        }

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator==(Current lhs, Current rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator!=(Current lhs, Current rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion
    }
}
