name: ci

on:
  workflow_dispatch:
  push:
    branches: ["3.7", "main", "macos-windows-ci"]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["3.7", "main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Build Dependencies
        uses: ./.github/actions/setup-build-dependencies

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-build
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')

      - name: Build Ice
        uses: ./.github/actions/build

  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Test Dependencies
        uses: ./.github/actions/setup-test-dependencies

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-build
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')

      - name: Test
        run: python3 allTests.py --workers=3

  # runs-on: ${{ matrix.os }}
  # needs: build-ice
  # steps:
  #   - name: Configure Test Dependencies
  #     uses: ./.github/actions/configure-test-dependencies
  #   - name: Checkout repository
  #     uses: actions/checkout@v3
  #   - name: Setup ccache
  #     uses: hendrikmuhs/ccache-action@v1.2
  #     with:
  #       key: ${{ runner.os }}-build
  #     if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')
  #   - name: Test
  #     run: python3 allTests.py --workers=3

  # linux-latest:
  #   runs-on: [ubuntu-latest]
  #   steps:
  #     - name: Install dependencies
  #       run: sudo apt-get install -y python3 python3-pip nodejs libbz2-dev libssl-dev libffi-dev libmcpp-dev libedit-dev liblmdb-dev libexpat1-dev libsystemd-dev openjdk-17-jdk ruby ruby-dev php-cli php-dev
  #     - name: Install test dependencies
  #       run: python3 -m pip install passlib cryptography
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Setup ccache
  #       uses: hendrikmuhs/ccache-action@v1.2
  #       with:
  #         key: ${{ runner.os }}-build
  #     - name: Build
  #       run: |
  #         export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
  #         make -j3 V=1
  #     - name: Test
  #       run: python3 allTests.py --workers=3

  # macos-latest:
  #   runs-on: [macos-latest]
  #   steps:
  #     - name: Install brew dependencies
  #       run: brew install python3 ruby openjdk node php lmdb mcpp
  #     - name: Install test dependencies
  #       run: python3 -m pip install passlib cryptography
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Setup ccache
  #       uses: hendrikmuhs/ccache-action@v1.2
  #       with:
  #         key: ${{ runner.os }}-build
  #     - name: Build
  #       run: |
  #         export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
  #         make -j3 V=1
  #     - name: Test
  #       run: python3 allTests.py --workers=3

  # windows-latest:
  #   runs-on: [windows-latest]
  #   steps:
  #     # - name: Install dependencies
  #     #   run: choco --yes install
  #     - name: Setup MSBuild
  #       uses: microsoft/setup-msbuild@v1.1
  #       with:
  #         msbuild-architecture: x64
  #     - name: Setup Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.12"
  #     - name: Install test dependencies
  #       run: python -m pip install passlib cryptography python-dev-tools
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Cache
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           **/bin
  #           **/obj
  #         key: ${{ runner.os }}-build-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-${{ github.sha }}
  #           ${{ runner.os }}-build-
  #     - name: Configure Environment
  #       run: |
  #         echo "PythonHome=$env:Python_ROOT_DIR"  >> $env:GITHUB_ENV
  #     - name: Build
  #       run: msbuild /m /p:Platform=x64 ice.proj
  #     - name: Test
  #       run: python allTests.py --platform=x64 --workers=3
